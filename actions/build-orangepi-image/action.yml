name: 'OrangePI/build'
author: 'Stefan Dej'
description: 'Build orangepi-os images'
inputs:
  configfile:
    description: 'Config file name'
    required: true

runs:
  using: 'composite'
  steps:
    #- name: Runner prepare
    #  uses: ./actions/runner-prepare
    - name: Free Github Runner
      uses: descriptinc/free-disk-space@main
      with:
        android: true
        dotnet: true
        haskell: true
        large-packages: true
        docker-images: true
        swap-storage: true

    - name: Install Required Packages
      shell: bash
      run: |
        sudo apt-get update
        sudo apt-get install -y aria2 gpg pv

    - name: Read configs
      id: config
      shell: bash
      run: |
        source ./build-configs/configs-orangepi/config-default.conf
        source ./build-configs/configs-orangepi/board-${{ inputs.configfile }}.conf
        
        echo "orangepi_repository=${ORANGEPI_REPOSITORY}" >> $GITHUB_OUTPUT
        echo "orangepi_branch=${ORANGEPI_BRANCH}" >> $GITHUB_OUTPUT

    - name: Checkout Custom Copy Repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 1
        repository: ${{ steps.config.outputs.orangepi_repository }}
        ref: ${{ steps.config.outputs.orangepi_branch }}
        path: build

    - name: Create config file
      shell: bash
      run: |
        mkdir -p ./build/userpatches
        cp ./build-configs/configs-orangepi/config-default.conf ./build/userpatches/config-settings.conf
        cat ./build-configs/configs-orangepi/board-${{ inputs.configfile }}.conf >> ./build/userpatches/config-settings.conf
        echo "::group::Output config-settings.conf"
        cat ./build/userpatches/config-settings.conf
        echo "::endgroup::"

    - name: Cache Toolchains
      id: cache-toolchains
      uses: actions/cache@v4
      with:
        path: build/toolchains
        key: orangepi-toolchains-${{ hashFiles('build/scripts/general.sh') }}

    - name: Download Toolchains
      if: steps.cache-toolchains.outputs.cache-hit != 'true'
      working-directory: ./build
      shell: bash
      run: |
        # Create toolchains directory
        mkdir -p toolchains
        cd toolchains
        
        # GPG Setup
        mkdir -p .gpg
        chmod 700 .gpg
        touch .gpg/gpg.conf
        chmod 600 .gpg/gpg.conf
        
        # Import GPG keys
        gpg --homedir .gpg --no-permission-warning --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys 8F427EAF
        gpg --homedir .gpg --no-permission-warning --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys 9F0E78D5
        
        TOOLCHAINS=($(awk '/^[[:space:]]*local toolchains=\(/,/\)/ {
          if ($0 ~ /".+"/) {
            gsub(/^[[:space:]]*"|"[[:space:]]*$/, "")
            print $0
          }
        }' ../scripts/general.sh))
        
        # Source helper functions
        source ../../build-configs/actions/build-orangepi-image/download-tools.sh
        
        # Download and verify all toolchains
        for toolchain in "${TOOLCHAINS[@]}"; do
          download_and_verify "$toolchain" || {
            echo "Failed to process $toolchain"
            exit 1
          }
        done
        
        # Cleanup downloaded archives
        rm -f *.tar.* *.asc

    - name: Save Toolchains Cache
      if: steps.cache-toolchains.outputs.cache-hit != 'true'
      uses: actions/cache/save@v4
      with:
        path: build/toolchains
        key: orangepi-toolchains-${{ hashFiles('build/scripts/general.sh') }}

    - name: Build Image
      shell: bash
      run: |
        cd ./build
        ./build.sh settings

    - name: Fix userrights
      shell: bash
      run: |
        WORKSPACE=$(echo ${{ github.workspace }})
        sudo chown -R $USER:$USER $WORKSPACE/build || true
        sudo chmod 0777 -R $WORKSPACE/build || true
        sudo df
