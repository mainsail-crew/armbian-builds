name: 'OrangePI/build'
author: 'Stefan Dej'
description: 'Build orangepi-os images'
inputs:
  configfile:
    description: 'Config file name'
    required: true

runs:
  using: 'composite'
  steps:
    #- name: Runner prepare
    #  uses: ./actions/runner-prepare
    - name: Free Github Runner
      uses: descriptinc/free-disk-space@main
      with:
        android: true
        dotnet: true
        haskell: true
        large-packages: true
        docker-images: true
        swap-storage: true

    - name: Read configs
      id: config
      shell: bash
      run: |
        source ./build-configs/configs-orangepi/config-default.conf
        source ./build-configs/configs-orangepi/board-${{ inputs.configfile }}.conf
        
        echo "armbian_repository=${ARMBIAN_REPOSITORY}" >> $GITHUB_OUTPUT
        echo "armbian_branch=${ARMBIAN_BRANCH}" >> $GITHUB_OUTPUT
        
        echo "orangepi_repository=${ORANGEPI_REPOSITORY}" >> $GITHUB_OUTPUT
        echo "orangepi_branch=${ORANGEPI_BRANCH}" >> $GITHUB_OUTPUT

    - name: Checkout armbian Repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 1
        repository: ${{ steps.config.outputs.armbian_repository }}
        ref: ${{ steps.config.outputs.armbian_branch }}
        path: build

    - name: Checkout Custom Copy Repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 1
        repository: ${{ steps.config.outputs.orangepi_repository }}
        ref: ${{ steps.config.outputs.orangepi_branch }}
        path: orangepi-build

    - name: Copy OrangePI Repository to armbian/build
      shell: bash
      run: |
        cp -R ./orangepi-build/* ./build/
        mkdir -p ./build/userpatches
        cp ./build-configs/configs-orangepi/config-default.conf ./build/userpatches/config-settings.conf
        cat ./build-configs/configs-orangepi/board-${{ inputs.configfile }}.conf >> ./build/userpatches/config-settings.conf
        echo "::group::Output config-settings.conf"
        cat ./build/userpatches/config-settings.conf
        echo "::endgroup::"

    - name: sed VERSION
      shell: bash
      run: |
        sed -i 's/-trunk//' ./build/VERSION
        echo "::group::Output VERSION"
        cat ./build/VERSION
        echo "::endgroup::"

    - name: Build Image
      shell: bash
      run: |
        cd ./build
        ./build.sh settings

    - name: Fix userrights
      shell: bash
      run: |
        WORKSPACE=$(echo ${{ github.workspace }})
        sudo chown -R $USER:$USER $WORKSPACE/build || true
        sudo chmod 0777 -R $WORKSPACE/build || true
        sudo df
