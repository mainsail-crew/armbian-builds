name: 'Armbian/build'
author: 'Stefan Dej'
description: 'Build armbian images'
inputs:
  configfile:
    description: 'Config file name'
    required: true

runs:
  using: 'composite'
  steps:
    #- name: Runner prepare
    #  uses: ./actions/runner-prepare
    - name: Free Github Runner
      uses: descriptinc/free-disk-space@main
      with:
        android: true
        dotnet: true
        haskell: true
        large-packages: true
        docker-images: true
        swap-storage: true

    - name: Read configs
      id: config
      shell: bash
      run: |
        source ./build-configs/configs/config-default.conf
        source ./build-configs/configs/board-${{ inputs.configfile }}.conf
        
        echo "armbian_repository=${ARMBIAN_REPOSITORY}" >> $GITHUB_OUTPUT
        echo "armbian_branch=${ARMBIAN_BRANCH}" >> $GITHUB_OUTPUT

    - name: Checkout armbian Repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 1
        repository: ${{ steps.config.outputs.armbian_repository }}
        ref: ${{ steps.config.outputs.armbian_branch }}
        path: build

    - name: Create config-default.conf
      shell: bash
      run: |
        mkdir -p ./build/userpatches
        cp ./build-configs/configs/config-default.conf ./build/userpatches/config-settings.conf
        cat ./build-configs/configs/board-${{ inputs.configfile }}.conf >> ./build/userpatches/config-settings.conf
        echo "::group::Output config-settings.conf"
        cat ./build/userpatches/config-settings.conf
        echo "::endgroup::"

    - name: sed VERSION
      shell: bash
      run: |
        sed -i 's/-trunk//' ./build/VERSION
        echo "::group::Output VERSION"
        cat ./build/VERSION
        echo "::endgroup::"

    - name: Build Image
      shell: bash
      run: |
        cd ./build
        ./compile.sh settings

    - name: Fix userrights
      shell: bash
      run: |
        WORKSPACE=$(echo ${{ github.workspace }})
        sudo chown -R $USER:$USER $WORKSPACE/build || true
        sudo chmod 0777 -R $WORKSPACE/build || true
        sudo df

    - name: Show partition table before
      shell: bash
      working-directory: "./build/output/images/"
      run: |
        echo "::group::Partition table of generated image"
        fdisk -l *.img
        echo "::endgroup::"

    - name: Get partition index with type 'ea'
      id: get-partition
      shell: bash
      working-directory: "./build/output/images/"
      run: |
        echo "::group::Finding partition with type 'ea'"
        PARTITION_INDEX=$(fdisk -l *.img | grep -i "type ea" | awk '{print $1}' | grep -o '[0-9]*$')
        echo "Found partition index: ${PARTITION_INDEX}"
        echo "::endgroup::"
        echo "partition_index=${PARTITION_INDEX}" >> $GITHUB_OUTPUT

    - name: Change partition type to 0b
      shell: bash
      working-directory: "./build/output/images/"
      run: |
        echo "::group::Changing partition type to 0b"
        IMAGE_FILE=$(ls *.img)
        echo "Image file: ${IMAGE_FILE}"
        echo "Partition index: ${{ steps.get-partition.outputs.partition_index }}"
        sfdisk --part-type "${IMAGE_FILE}" ${{ steps.get-partition.outputs.partition_index }} 0b
        echo "::endgroup::"

    - name: Show updated partition table
      shell: bash
      working-directory: "./build/output/images/"
      run: |
        echo "::group::Updated partition table"
        fdisk -l *.img
        echo "::endgroup::"